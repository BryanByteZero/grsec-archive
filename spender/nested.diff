diff --git a/gradm_analyze.c b/gradm_analyze.c
index f98b020..709c784 100644
--- a/gradm_analyze.c
+++ b/gradm_analyze.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2002-2014 Bradley Spengler, Open Source Security, Inc.
+ * Copyright (C) 2002-2016 Bradley Spengler, Open Source Security, Inc.
  *        http://www.grsecurity.net spender@grsecurity.net
  *
  * This file is part of gradm.
@@ -297,6 +297,29 @@ check_default_objects(struct role_acl *role)
 }
 
 static void
+check_nested_default_objects(void)
+{
+	struct proc_acl *tmp;
+	struct file_acl *tmpf;
+
+	for_each_nested_subject(tmp) {
+		/* skip all inherited subjects */
+		if (tmp->parent_subject != NULL)
+			continue;
+		tmpf = lookup_acl_object_by_name(tmp, "/");
+		if (tmpf == NULL) {
+			fprintf(stderr, "Default object not found for "
+				"nested subject %s\nThe RBAC system will "
+				"not load until you correct this "
+				"error.\n", tmp->filename);
+			exit(EXIT_FAILURE);
+		}
+	}
+
+	return;
+}
+
+static void
 check_subject_modes(struct role_acl *role)
 {
 	struct proc_acl *tmp;
@@ -681,6 +704,8 @@ analyze_acls(void)
 
 	errs_found += check_role_transitions();
 
+	errs_found += check_nested_default_objects();
+
 	for_each_role(role, current_role)
 		if (role->roletype & GR_ROLE_DEFAULT)
 			def_role_found = 1;
diff --git a/gradm_nest.c b/gradm_nest.c
index 17e97a6..f67b4c9 100644
--- a/gradm_nest.c
+++ b/gradm_nest.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2002-2014 Bradley Spengler, Open Source Security, Inc.
+ * Copyright (C) 2002-2016 Bradley Spengler, Open Source Security, Inc.
  *        http://www.grsecurity.net spender@grsecurity.net
  *
  * This file is part of gradm.
@@ -91,7 +91,8 @@ add_proc_nested_acl(struct role_acl *role, const char *mainsubjname,
 			if (otmp->mode & GR_EXEC)
 				otmp->nested = current_subject;
 	}
-	current_subject->parent_subject = stmp;
+	if (!(current_subject->mode & GR_OVERRIDE) && strcmp(current_subject->filename, "/"))
+		current_subject->parent_subject = stmp;
 
 	if (!stat(nestednames[i - 1], &fstat) && S_ISREG(fstat.st_mode))
 		add_proc_object_acl(current_subject, nestednames[i - 1], proc_object_mode_conv("rx"), GR_FLEARN);
